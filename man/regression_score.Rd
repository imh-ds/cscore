% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/regression_score.R
\name{regression_score}
\alias{regression_score}
\title{Calculate Regression-Weighted Composite Scores}
\usage{
regression_score(
  data = .,
  composite_list,
  digits = 3,
  return_metrics = FALSE,
  file = NULL
)
}
\arguments{
\item{data}{A dataframe object. This should be a structured dataset where
each column represents a variable and each row represents an observation.}

\item{composite_list}{A required \code{composite_list} object. Each name in
the list represents a composite variable, and the corresponding vector
contains the column names that are associated with the indicators
comprising said composite variable.}

\item{digits}{The decimal places for the metrics to be rounded to. Default is
3. This argument is only relevant if \code{return_metrics = TRUE}.}

\item{return_metrics}{Logic to determine whether to return reliability and
validity metrics. Set to \code{TRUE} for a list of dataframes with
reliability and validity metrics.}

\item{file}{An optional file path. If specified, the results will be written
as a formatted excel workbook. This argument is only relevant if
\code{return_metrics = TRUE}.}
}
\value{
If \code{return_metrics = FALSE}, a dataframe identical to the input
  dataframe, with additional columns appended at the end, is returned. These
  new columns represent the calculated composite scores. If
  \code{return_metrics = TRUE}, a list containing the following dataframes is
  returned:
 \itemize{
 \item{\strong{Data}: }{A dataframe with the composite variables appended as new
 variables.}
 \item{\strong{Metrics}: }{A matrix of indicator loadings and weights metrics.}
 \item{\strong{Validity}: }{A matrix of composite reliability and validity
 metrics.}
}
}
\description{
Create composite scores of scales by specifying the indicators that go into
each respective composite variable. Regression-weighted composite scores are
calculated by fitting a linear model where the correlation-weighted composite
scores are regressed on the indicators. The indicators are multiplied by
their respective regression weights to calculate the predicted values in the
linear model, which represent the regression-weighted composite scores.

The regression weights (\eqn{w}) are calculated by fitting a linear model
with the correlation-weighted composite score (\eqn{\bar{cs}_c}) as the
outcome and the indicators (\eqn{I_{1...n}}) as the predictors (see help
document for \code{?correlation_score} for information on the calculation of
the correlation-weighted composite score). The standardized coefficients
(\eqn{\beta_{1...n}}) from this model are used as the weights:

\deqn{\bar{cs}_c = \beta_0 + \beta_1I_1 + \beta_2I_2 + ... + \epsilon}{cs_c =
beta_0 + beta_1I_1 + beta_2I_2 + ... + error}

The regression weights are simply the normalized beta coefficient:

\deqn{w_i = \frac{\beta_i}{\frac{1}{m}
\sum_{k=1}^{m} \beta_k}}{beta_i = beta_i / (1/m * sum(beta_k) for k=1 to m)}

where \eqn{m} is the number of indicators, and the sum is taken over all
\eqn{k}. Finally, the regression-weighted composite score is calculated as
follows:

\deqn{\bar{cs}_r = \frac{1}{n} \sum_{i=1}^{n} I[i] *
w_i}{composite_score = 1/n * sum(I[i] * w_i) for i=1 to n)}

where \eqn{\bar{cs}_r} is the regression weighted composite score. If
\code{return_metrics} is set to \code{TRUE}, the function also returns
composite reliability and validity metrics, as well as indicator-level
loadings and weights. See the documentation \code{?calc_metrics} for
the calculation and reporting of reliability and validity measures.

If \code{file} is specified with a file path, this function will
automatically write a formatted excel workbook of the returned output. The
format is consistent with what is typically reported in APA 7th edition, and
can be copy and pasted directly into a Word document or similar document
software.
}
\examples{

data(grit)

# Specify the named list with composite names and their respective indicators
composite_list <- composite_list(

  # Lower-order composites
  extraversion          = sprintf("e\%01d", seq(10)),
  neuroticism           = sprintf("n\%01d", seq(10)),
  agreeableness         = sprintf("a\%01d", seq(10)),
  conscientiousness     = sprintf("c\%01d", seq(10)),
  openness              = sprintf("o\%01d", seq(10)),
  consistency_interest  = sprintf("gs\%01d", c(2,3,5,7,8,11)),
  perseverence_effort   = sprintf("gs\%01d", c(1,4,6,9,10,12)),

  # Higher-order composites
  grit                  = c("consistency_interest", "perseverence_effort")

 )

# Calculate regression-weighted composite scores
regression_score(data = grit,
                 composite_list = composite_list)
                                     
# Calculate regression-weighted composite scores, reliability, & validity
regression_score(data = grit,
                 composite_list = composite_list,
                 digits = 3,
                 return_metrics = TRUE,
                 file = "composite.xlsx")

unlink("composite.xlsx")

}
