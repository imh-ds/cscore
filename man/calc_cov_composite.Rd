% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_cov_composite.R
\name{calc_cov_composite}
\alias{calc_cov_composite}
\title{Calculate Covariance Composite Scores}
\usage{
calc_cov_composite(data, var, weight, digits = 3, name = NULL, return_metrics)
}
\arguments{
\item{data}{A dataframe object. This should be a structured dataset where
each column represents a variable and each row represents an observation.}

\item{var}{A required vector of indicator column names.}

\item{weight}{Required weighting schema. Schemas include
\code{c("correlation", "regression", "average")}}

\item{digits}{The decimal places for the metrics to be rounded to. Default is
3.}

\item{name}{A required string denoting the name of the composite variable.}

\item{return_metrics}{Logic to determine whether to return reliability and
validity metrics. Set to \code{TRUE} for a list of dataframes with
reliability and validity metrics.}
}
\value{
If \code{return_metrics = FALSE}, an array of the composite score is
  returned. If \code{return_metrics = TRUE}, a list is returned consisting
  of:
\itemize{
 \item{\code{composite_score}: }{An array with the calculated composite
 variable.} \item{\code{composite_metrics}: }{A matrix loadings and weights
 of the indicators.}
 \item{\code{composite_validity}: }{A matrix of composite reliability and 
 validity metrics.}
}
}
\description{
Calculate the composite score for the covariance family of weighting schemas.
For information on the specifics calculations, refer to the help
documentations of \code{?average_score} (for unweighted),
\code{?correlation_score} (for correlation-weighted), and
\code{?regression_score} (for regression-weighted).

Refer to help documentation \code{?calc_metrics} for information on how
reliability and validity metrics are calculated.
}
\examples{

data(grit)

# Specify a vector of indicators
extraversion <- sprintf("e\%01d", seq(10))

# Calculate correlation-weighted composite score
calc_cov_composite(data = grit,
                   var = extraversion,
                   weight = "correlation",
                   return_metrics = FALSE)

# Calculate correlation-weighted composite score and metrics
calc_cov_composite(data = grit,
                   var = extraversion,
                   weight = "correlation",
                   name = "extraversion",
                   digits = 3,
                   return_metrics = TRUE)

}
