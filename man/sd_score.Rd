% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/score_sd.R
\name{sd_score}
\alias{sd_score}
\title{Calculate Standard Deviation Composite Scores}
\usage{
sd_score(
  data = .,
  composite_list,
  weight = c("sd_upweight", "sd_downweight"),
  digits = 3,
  return_metrics = FALSE,
  file = NULL,
  name = NULL
)
}
\arguments{
\item{data}{A dataframe object. This should be a structured dataset where
each column represents a variable and each row represents an observation.}

\item{composite_list}{A required \code{composite_list} object. Each name in
the list represents a composite variable, and the corresponding vector
contains the column names that are associated with the indicators
comprising said composite variable.}

\item{weight}{Required weighting schema. Schemas include
\code{c("sd_upweight", "sd_downweight")}. Default is \code{"sd_upweight"}.}

\item{digits}{The decimal places for the metrics to be rounded to. Default is
3. This argument is only relevant if \code{return_metrics = TRUE}.}

\item{return_metrics}{Logic to determine whether to return reliability and
validity metrics. Set to \code{TRUE} for a list of dataframes with
reliability and validity metrics.}

\item{file}{An optional file path. If specified, the results will be written
as a formatted excel workbook. This argument is only relevant if
\code{return_metrics = TRUE}.}

\item{name}{A required string denoting the name of the composite variable.}
}
\value{
If \code{return_metrics = FALSE}, a dataframe identical to the input
  dataframe, with additional columns appended at the end, is returned. These
  new columns represent the calculated composite scores. If
  \code{return_metrics = TRUE}, a list containing the following dataframes is
  returned:
 \itemize{
 \item \strong{Data}: A dataframe with the composite variables appended as new
 variables.
 \item \strong{Metrics}: A matrix of indicator loadings and weights metrics.
 \item \strong{Validity}: A matrix of composite reliability and validity
 metrics.
}
}
\description{
Create composite scores of scales by specifying the indicators
  that go into each respective composite variable.
}
\details{
Standard deviation (SD)â€“weighted composite scores assign indicator
weights based on their empirical variability. Two variants are supported:
\strong{upweighting} and \strong{downweighting} by standard deviation.

Let \eqn{I_{cj}} denote the value of indicator \eqn{j} for case \eqn{c}. For
each indicator \eqn{j}, its sample standard deviation \eqn{\sigma_j} is
computed as:

\deqn{\sigma_j = \sqrt{\frac{1}{n - 1} \sum_{i=1}^{n} (I_{ij} -
\bar{I}_{\cdot j})^2}}

where \eqn{\bar{I}_{\cdot j}} is the sample mean of indicator \eqn{j} across
all \eqn{n} observations.

\strong{1. SD-Upweighted Composite.}

Indicators with greater dispersion are weighted more heavily. The weights are
normalized:

\deqn{w_j = \frac{\sigma_j}{\frac{1}{m} \sum_{k=1}^{m} \sigma_k}}

The final composite score for case \eqn{c} is:

\deqn{\bar{C}_c^{(u)} = \frac{1}{m} \sum_{j=1}^{m} I_{cj} \cdot w_j}

where \eqn{m} is the total number of indicators.

\strong{2. SD-Downweighted Composite.}

Indicators with greater dispersion are weighted less heavily by using the
inverse of the standard deviation:

\deqn{w_j = \frac{\sigma_j^{-1}}{\frac{1}{m} \sum_{k=1}^{m} \sigma_k^{-1}}}

The resulting downweighted composite score is:

\deqn{\bar{C}_c^{(d)} = \frac{1}{m} \sum_{j=1}^{m} I_{cj} \cdot w_j}

Both upweighted and downweighted schemes produce unit-normalized weights
(\eqn{\bar{w} = 1}). These can be used to emphasize or attenuate variability
in the indicators depending on the analytic goal.

If \code{return_metrics = TRUE}, the function returns reliability and
validity metrics in addition to the composite score. See
\code{\link{calc_metrics}} for details.
}
\examples{

data(grit)

# Specify the named list with composite names and their respective indicators
composite_list <- composite_list(

  # Lower-order composites
  extraversion          = sprintf("e\%01d", seq(10)),
  neuroticism           = sprintf("n\%01d", seq(10)),
  agreeableness         = sprintf("a\%01d", seq(10)),
  conscientiousness     = sprintf("c\%01d", seq(10)),
  openness              = sprintf("o\%01d", seq(10)),
  consistency_interest  = sprintf("gs\%01d", c(2,3,5,7,8,11)),
  perseverance_effort   = sprintf("gs\%01d", c(1,4,6,9,10,12)),

  # Higher-order composites
  grit                  = c("consistency_interest", "perseverance_effort")

 )

# Calculate correlation-weighted composite scores
sd_score(data = grit,
         composite_list = composite_list)

# Calculate correlation-weighted composite scores, reliability, & validity
sd_score(data = grit,
         composite_list = composite_list,
         digits = 3,
         return_metrics = TRUE,
         file = "composite.xlsx")

unlink("composite.xlsx")

}
